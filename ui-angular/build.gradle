plugins {
    id 'com.github.node-gradle.node' version '3.5.1'
}

ext {
    angulaCliVersion = '15.2.4'
}

node {
    // Version of node to use.
    version = '18.15.0'

    // Version of npm to use.
//    npmVersion = '2.1.5'

    // Version of Yarn to use.
//    yarnVersion = '0.16.1'

    // Base URL for fetching node distributions (change if you have a mirror).
//    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")

    // Set the work directory for Yarn
    yarnWorkDir = file("${project.buildDir}/yarn")
}

task generateAngularApp(type: NpxTask) {
    command = "@angular/cli@${angulaCliVersion}"
    args = ['new', 'ui-angular', '--directory', '.', '--skip-git']
}

task helpAngularApp(type: NpxTask) {
    command = "@angular/cli@${angulaCliVersion}"
    args = ['new', 'help']
}

task ngServe(type: NpxTask) {
    dependsOn npmInstall
    command = 'ng'
    args = ['serve', '--open']
}

task buildAngularApp(type: NpxTask) {
    dependsOn npmInstall
    command = 'ng'
    args = ['build', '--dev']
    inputs.files(
            'package.json',
            'package-lock.json',
            'angular.json',
            'tsconfig.json',
            'tsconfig.app.json')
    inputs.dir('src')
    inputs.dir(fileTree("node_modules").exclude(".cache"))
    outputs.dir('dist')
}

task installDevPackage(type: NpmTask) {
  args = ['install', 'tslint-angular', '--save-dev']
}

task auditForceFix(type: NpmTask) {
  // install the express package only
  args = ['audit', 'fix', '--force']
}
